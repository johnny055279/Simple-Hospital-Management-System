//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalManageSystem
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HospitalDBEntities : DbContext
    {
        public HospitalDBEntities()
            : base("name=HospitalDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Diagnosis> Diagnosis1 { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Messageboard> Messageboards { get; set; }
        public virtual DbSet<Issue> Issues { get; set; }
        public virtual DbSet<Pill> Pills { get; set; }
        public virtual DbSet<Prescription> Prescriptions { get; set; }
    
        public virtual int AccountExistCheck(string account)
        {
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccountExistCheck", accountParameter);
        }
    
        public virtual int LoginProcedure(string account, byte[] password)
        {
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoginProcedure", accountParameter, passwordParameter);
        }
    
        public virtual int SignInProcedure(string username, byte[] password, string firstName, string lastName, Nullable<System.DateTime> birthday, string sexual, string email, string occupation, string department, byte[] picture, string physicianID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(byte[]));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var sexualParameter = sexual != null ?
                new ObjectParameter("Sexual", sexual) :
                new ObjectParameter("Sexual", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(byte[]));
    
            var physicianIDParameter = physicianID != null ?
                new ObjectParameter("PhysicianID", physicianID) :
                new ObjectParameter("PhysicianID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SignInProcedure", usernameParameter, passwordParameter, firstNameParameter, lastNameParameter, birthdayParameter, sexualParameter, emailParameter, occupationParameter, departmentParameter, pictureParameter, physicianIDParameter);
        }
    }
}
